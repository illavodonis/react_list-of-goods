{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isAppStarted","isReversed","sortBy","lengthLimit","handleAppStarted","setState","selectHandler","event","target","value","reverse","sortByLength","sortByName","reset","this","selectedGoods","filter","good","length","sort","good1","good2","localeCompare","className","type","onClick","classNames","htmlFor","name","onChange","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAyB,CACvBC,MAAOH,EACPI,cAAc,EACdC,YAAY,EACZC,OAAQ,GACRC,YAAa,G,EAGfC,iBAAmB,WACjB,EAAKC,SAAS,CAAEL,cAAc,K,EAGhCM,cAAgB,SAACC,GACf,EAAKF,SAAS,CAAEF,aAAcI,EAAMC,OAAOC,S,EAG7CC,QAAU,WACR,EAAKL,UAAS,SAAAP,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBU,aAAe,WACb,EAAKN,SAAS,CAAEH,OAAQ,Y,EAG1BU,WAAa,WACX,EAAKP,SAAS,CAAEH,OAAQ,U,EAG1BW,MAAQ,WACN,EAAKR,SAAS,CACZJ,YAAY,EACZC,OAAQ,GACRC,YAAa,K,4CAIjB,WAAU,IAAD,OACP,EAEIW,KAAKhB,MADPC,EADF,EACEA,MAAOC,EADT,EACSA,aAAcC,EADvB,EACuBA,WAAYC,EADnC,EACmCA,OAAQC,EAD3C,EAC2CA,YAGrCY,EAAgBhB,EAAMiB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUf,KAqB1D,OAnBAY,EAAcI,MAAK,SAACC,EAAOC,GACzB,OAAQnB,GACN,IAAK,SACH,OAAOkB,EAAMF,OAASG,EAAMH,OAG9B,IAAK,OACH,OAAOE,EAAME,cAAcD,GAE7B,QACE,OAAO,MAKTpB,GACFc,EAAcL,UAId,sBAAKa,UAAU,MAAf,WACKvB,GAEC,qBAAKuB,UAAU,gBAAf,SACE,sBAAKA,UAAU,yDAAf,UAME,oBAAIA,UAAU,sCAAd,2BAOA,wBACEA,UAAU,yDAMVC,KAAK,SACLC,QAAS,kBAAM,EAAKrB,oBARtB,wBAiBPJ,GAEE,qBAAKuB,UAAU,SAAf,SACE,sBAAKA,UAAU,+DAAf,UAQE,oBAAIA,UAAU,sCAAd,2BAOA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,wBACEA,UAAWG,IACT,SACA,CAAE,cAAezB,GACjB,CAAE,YAAaA,IAEjBuB,KAAK,SACLC,QAAS,kBAAM,EAAKf,WAPtB,uBAaF,qBAAKa,UAAU,SAAf,SACE,wBACEA,UAAWG,IACT,SACA,CAAE,aAAyB,SAAXxB,GAChB,CAAE,YAAwB,SAAXA,IAEjBsB,KAAK,SACLC,QAAS,kBAAM,EAAKb,cAPtB,mCAaF,qBAAKW,UAAU,SAAf,SACE,wBACEA,UAAWG,IACT,SACA,CAAE,aAAyB,WAAXxB,GAChB,CAAE,YAAwB,WAAXA,IAEjBsB,KAAK,SACLC,QAAS,kBAAM,EAAKd,gBAPtB,8BAaF,qBAAKY,UAAU,SAAf,SACE,wBACEA,UAAWG,IACT,SACA,CAAE,aAAc1B,GAChB,CACE,YACFC,GACe,SAAXC,GACW,WAAXA,GACAC,EAAc,IAGpBqB,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAbtB,qBAmBF,qBAAKU,UAAU,SAAf,SACE,wBAAOI,QAAQ,GAAGJ,UAAU,QAA5B,mBAEE,qBAAKA,UAAU,6BAAf,SACE,wBACEd,MAAON,EACPyB,KAAK,SACLC,SAAUf,KAAKR,cACfiB,UAAU,SAJZ,SAMI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIO,KAAI,SAAAC,GAAI,OACxC,wBAEEtB,MAAOsB,EAFT,SAIGA,GAHIA,kBAYnB,6BACGhB,EAAce,KAAI,SAAAb,GACjB,OACE,6BACGA,GADMA,oB,GAhNZe,IAAMC,WA+NTpC,ICrPfqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.97d34e82.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isAppStarted: boolean,\n  isReversed: boolean,\n  sortBy: string,\n  lengthLimit: number\n};\n\nclass App extends React.Component <{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    isAppStarted: false,\n    isReversed: false,\n    sortBy: '',\n    lengthLimit: 1,\n  };\n\n  handleAppStarted = () => {\n    this.setState({ isAppStarted: true });\n  };\n\n  selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ lengthLimit: +event.target.value });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  sortByName = () => {\n    this.setState({ sortBy: 'name' });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      lengthLimit: 1,\n    });\n  };\n\n  render() {\n    const {\n      goods, isAppStarted, isReversed, sortBy, lengthLimit,\n    } = this.state;\n\n    const selectedGoods = goods.filter(good => good.length >= lengthLimit);\n\n    selectedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'length':\n          return good1.length - good2.length;\n          break;\n\n        case 'name':\n          return good1.localeCompare(good2);\n          break;\n        default:\n          return 0;\n          break;\n      }\n    });\n\n    if (isReversed) {\n      selectedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {(!isAppStarted\n          && (\n            <div className=\"columns  card\">\n              <div className=\"\n                column\n                is-half\n                is-offset-one-quarter\n                content is-large\"\n              >\n                <h1 className=\"\n                  contnet\n                  is-large\n                  has-text-centered\"\n                >\n                  List of goods\n                </h1>\n                <button\n                  className=\"\n                    button\n                    is-large\n                    is-fullwidth\n                    is-responsive\n                    is-primary\"\n                  type=\"button\"\n                  onClick={() => this.handleAppStarted()}\n                >\n                  Start\n                </button>\n              </div>\n\n            </div>\n          )\n        )}\n        {isAppStarted\n         && (\n           <div className=\"colums\">\n             <div className=\"\n                card\n                column\n                is-half\n                is-offset-one-quarter\n                content is-large\n                \"\n             >\n               <h1 className=\"\n                  contnet\n                  is-large\n                  has-text-centered\"\n               >\n                 Choise Filter\n               </h1>\n               <div className=\"column columns\">\n                 <div className=\"column\">\n                   <button\n                     className={classNames(\n                       'button',\n                       { 'is-success': !isReversed },\n                       { 'is-danger': isReversed },\n                     )}\n                     type=\"button\"\n                     onClick={() => this.reverse()}\n                   >\n                     Reverse\n                   </button>\n\n                 </div>\n                 <div className=\"column\">\n                   <button\n                     className={classNames(\n                       'button',\n                       { 'is-success': sortBy !== 'name' },\n                       { 'is-danger': sortBy === 'name' },\n                     )}\n                     type=\"button\"\n                     onClick={() => this.sortByName()}\n                   >\n                     Sort alphabetically\n                   </button>\n\n                 </div>\n                 <div className=\"column\">\n                   <button\n                     className={classNames(\n                       'button',\n                       { 'is-success': sortBy !== 'length' },\n                       { 'is-danger': sortBy === 'length' },\n                     )}\n                     type=\"button\"\n                     onClick={() => this.sortByLength()}\n                   >\n                     Sort by length\n                   </button>\n\n                 </div>\n                 <div className=\"column\">\n                   <button\n                     className={classNames(\n                       'button',\n                       { 'is-success': isAppStarted },\n                       {\n                         'is-danger':\n                       isReversed\n                        || sortBy === 'name'\n                        || sortBy === 'length'\n                        || lengthLimit > 1,\n                       },\n                     )}\n                     type=\"button\"\n                     onClick={() => this.reset()}\n                   >\n                     Reset\n                   </button>\n\n                 </div>\n                 <div className=\"column\">\n                   <label htmlFor=\"\" className=\"level\">\n                     Length\n                     <div className=\"select is-small is-rounded\">\n                       <select\n                         value={lengthLimit}\n                         name=\"select\"\n                         onChange={this.selectHandler}\n                         className=\"select\"\n                       >\n                         { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n                           <option\n                             key={item}\n                             value={item}\n                           >\n                             {item}\n                           </option>\n                         ))}\n                       </select>\n                     </div>\n                   </label>\n                 </div>\n\n               </div>\n               <ul>\n                 {selectedGoods.map(good => {\n                   return (\n                     <li key={good}>\n                       {good}\n                     </li>\n                   );\n                 })}\n               </ul>\n\n             </div>\n           </div>\n         )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}